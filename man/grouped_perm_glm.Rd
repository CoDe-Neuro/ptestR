% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/grouped_perm_glm.R
\name{grouped_perm_glm}
\alias{grouped_perm_glm}
\title{Permutation test for generalized linear models}
\usage{
grouped_perm_glm(
  tbl,
  formla,
  var_to_perm,
  family = gaussian,
  permNum = 1000,
  seed = 42
)
}
\arguments{
\item{tbl}{A data frame or a data frame extension (e.g. a tibble) containing
the variables in the model.}

\item{formla}{An object of class "formula" containing a symbolic description
of the regression model to be fitted. See \code{\link[stats]{formula}} for
more details.}

\item{var_to_perm}{The columns of variables to permute.}

\item{family}{A description  of the error distribution and link function to
be used in \code{glm}. See \code{\link[stats]{family}} for more details.}

\item{permNum}{The number of permutations to generate.}

\item{seed}{A single value interpreted as an integer for initializing a
random permutation generator. See \code{\link[base]{set.seed}} for more
details.}
}
\value{
It returns a tibble containing the following components:
\tabular{ll}{\code{term}\tab  The name of the regression term.\cr
\tab \cr
\code{estimate} \tab The estimated value of the regression term.\cr
\tab \cr
\code{statistic} \tab The value of a test statistic to use in a hypothesis
that the regression term is non-zero.\cr
\tab \cr
\code{p.value} \tab The two-sided p-value associated with the observed
statistic.\cr
\tab \cr
\code{p.perm} \tab The likelihood of observing the test statistic of the
original data among that of permutations.}
}
\description{
\code{grouped_perm_glm} is a nonparametric test of generalized
linear models. It assesses the significance of coefficients by
permutation tests, which calculate the distribution of the test statistic by
randomly rearranging the observed data.
}
\examples{
counts <- sample(1:100, 9, replace=TRUE)
outcomes <- c(18,17,15,20,10,20,25,13,12)
treatment <- gl(3,3)
TBL <- data.frame(counts, outcomes, treatment)
grouped_perm_glm(TBL, outcomes ~ counts + treatment, "outcomes")

counts <- sample(1:100, 9, replace=TRUE)
outcomes <- gl(2,1,3)
treatment <- gl(3,3)
TBL <- data.frame(counts, outcomes, treatment)
grouped_perm_glm(TBL, outcomes ~ counts + treatment, "outcomes",
family = binomial)

}
